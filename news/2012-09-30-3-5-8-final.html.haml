---
layout: news-item
title: 'Netty 3.5.8.Final release - A "must" to upgrade'
author: normanmaurer
disqus_identifier: 7637271113204571798
---

:plain
  <div class="entry-content">
  <p style="font-family: Ubuntu, 'Liberation Sans', 'Droid Sans', Helvetica, sans-serif; font-size: 14px; font-style: normal; line-height: 19px; ">The Netty Team is proud to bring you another bug-fix release of the 3.5.x series. It contains many bug-fixes and improvements plus some new nice handlers that will make your life easier if you use SPDY or plan to-do so.</p>
  <p style="font-family: Ubuntu, 'Liberation Sans', 'Droid Sans', Helvetica, sans-serif; font-size: 14px; font-style: normal; line-height: 19px; "><span style="font-family: Ubuntu, 'Liberation Sans', 'Droid Sans', Helvetica, sans-serif; font-size: 14px; font-style: normal; line-height: 19px; ">So <strong>important</strong> things first..</span></p>
  <h2 id="HImprovements"><span>Improvements</span></h2>
  <p>This release contains an <strong>important</strong> improvement that helps to bring back the used context-switched to a sane number. This is done by adjust the selectTimeout to the "old" default of 500ms again and introduce the usage of a Timer to handle the Connection-Timeout handling when using Netty in client-mode.  It worth to mention that this only effected users of the "NIO Transport". "OIO Transport" users were not effected at all. See <span class="wikiexternallink"><a href="https://github.com/netty/netty/pull/613">#613</a></span> and <span class="wikiexternallink"><a href="https://github.com/netty/netty/issues/605">#605</a></span> for more details.</p>
  <p>You can observe the difference between this release and the previous via the specific tool for your OS. </p>
  <p>For example on linux:</p>
  <div class="box code"><span style="font-weight: italic; color: #408080; "># vmstat 1</span></div>
  <p>Another improvements that worth mention is the reducing of "garbage" that is created by the NioWorker if there is no "event" to be processed. It's now a way more friendly to the Garbage-Collector and so lower the pressure on it. See <span class="wikiexternallink"><a href="https://github.com/netty/netty/issues/597">#597</a></span> for some more details on the whole issue.</p>
  <h2 id="HBugfixes"><span>Bugfixes</span></h2>
  <p>As mention before this release ships a lot bug-fixes. The most important are:</p>
  <ul>
  <li>Fix StackOverflowError in ChunkedWriteHandler. <span class="wikiexternallink"><a href="https://github.com/netty/netty/issues/620">#620</a></span> and <span class="wikiexternallink"><a href="https://github.com/netty/netty/issues/621">#621</a></span>
  </li>
  <li>Fix IndexOutOfBoundException in CompositeChannelBuffer. <span class="wikiexternallink"><a href="https://github.com/netty/netty/issues/474">#474</a></span>
  </li>
  <li>Fix BufferedWriteHandler. <span class="wikiexternallink"><a href="https://github.com/netty/netty/issues/618">#618</a></span>
  </li>
  <li>SslHandler may miss to notify write Future if SSLEngine was closed. <span class="wikiexternallink"><a href="https://github.com/netty/netty/issues/601">#601</a></span>
  </li>
  <li>SPDY connection upgrade must be done "after" Response was written. <span class="wikiexternallink"><a href="https://github.com/netty/netty/issues/589">#589</a></span>
  </li>
  </ul>
  <div><h2 id="HNewFeatures"><span><span style="line-height: 19px;">New Features</span></span></h2></div>
  <p>Two new ChannelHandler implementations are included. that helps you to use SPDY and HTTP at the same time while provide you with all the "low-level" code. This makes it a lot easier to implement the needed code. </p>
  <p>The ChannelHandlers are:</p>
  <ul>
  <li>
  <span class="wikiexternallink"><a href="http://static.netty.io/3.5/api/org/jboss/netty/handler/codec/spdy/SpdyHttpResponseStreamIdHandler.html">SpdyHttpResponseStreamIdHandler</a></span> - ChannelHandler which allow you to re-use your "HTTP ChannelHandlers" without modifications in SPDY</li>
  <li>
  <span class="wikiexternallink"><a href="http://static.netty.io/3.5/api/org/jboss/netty/handler/codec/spdy/SpdyOrHttpChooser.html">SpdyOrHttpChooser</a></span> - Abstract ChannelHandler which you should extend to detect if a Client support SPDY or not. If SPDY is not supported it will add needed ChannelHandlers to the ChannelPipeline to serve it via HTTPs. If SPDY is supported it adds the needed ChannelHandlers for SPDY.</li>
  </ul>
  <div><p>An example usage of SpdyOrHttpChooser, which uses jetty-npn:</p></div>
  <script src="https://gist.github.com/3806559.js"></script><p>The full example of its usage can be found in <span class="wikiexternallink"><a href="https://github.com/normanmaurer/javamagazin-netty-spdy">this repository</a></span>.</p>
  <h2 id="HGeneral"><span>General</span></h2>
  <p style="font-family: Ubuntu, 'Liberation Sans', 'Droid Sans', Helvetica, sans-serif; font-size: 14px; font-style: normal; line-height: 19px; ">For all of the other changes please checkout our <span class="wikiexternallink"><a style="font-size: 14px; " href="https://github.com/netty/netty/issues?milestone=28&amp;state=closed">issue tracker</a></span>. </p>
  <p style="font-family: Ubuntu, 'Liberation Sans', 'Droid Sans', Helvetica, sans-serif; font-size: 14px; font-style: normal; line-height: 19px; ">The JAR file can be found on <span class="wikiexternallink"><a style="font-size: 14px; " href="http://search.maven.org/#artifactdetails%7Cio.netty%7Cnetty%7C3.5.8.Final%7Cjar">Maven Central</a></span> or  you can also get the full tarball from <span class="wikiexternallink"><a style="font-size: 14px; " href="https://netty.io/Main/Downloads">the download page</a></span>. Whatever you prefer...</p>
  <p style="font-family: Ubuntu, 'Liberation Sans', 'Droid Sans', Helvetica, sans-serif; font-size: 14px; font-style: normal; line-height: 19px; ">Please let us know if you have any problems or questions.</p>
  <p>We hope you will enjoy this release!</p>
  </div>
