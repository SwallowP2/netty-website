---
layout: news-item
title: 'Netty 3.5.6.Final released'
author: normanmaurer
disqus_identifier: 2459720242369994401
---

:plain
  <div class="entry-content">
  <p><strong>It was reported to us that the epoll(..) bug workaround creates a new Selector quite to often. So we are currently investigate, please don't upgrade to 3.5.6.Final in the meantime! We will issue a new release as soon as the root cause is found and fixed...</strong></p>
  <p><span style="font-family: Ubuntu, 'Liberation Sans', 'Droid Sans', Helvetica, sans-serif; font-size: 14px; font-style: normal; line-height: 19px; ">Here you get another bug-fix release out of the 3.5.x Series. It contains a bunch of </span>bug-fixes and also a workaround for an epoll(..) bug that was spotted in recent java versions. </p>
  <p>This mentioned epoll(..) bug can lead to very excessive cpu-spinning, which will most likely produce 100% cpu usage on the core that runs the thread of the NioWorker or NioDatagramWorker.  For more informations please see <span class="wikiexternallink"><a href="https://github.com/netty/netty/issues/327">#327</a></span>, <span class="wikiexternallink"><a href="https://github.com/netty/netty/pull/565">#565</a></span>.</p>
  <p><span style="font-family: Ubuntu, 'Liberation Sans', 'Droid Sans', Helvetica, sans-serif; font-size: 14px; font-style: normal; line-height: 19px; ">Beside this it also contain a workaround for another jdk bug which could lead to a infinity-loop when using NioClientSocketFactory. For more details please check <span class="wikiexternallink"><a href="https://github.com/netty/netty/issues/535">#535</a></span>.</span></p>
  <div class="wikimodel-emptyline"></div>
  <div class="wikimodel-emptyline"></div>
  <p style="font-family: Ubuntu, 'Liberation Sans', 'Droid Sans', Helvetica, sans-serif; font-size: 14px; font-style: normal; line-height: 19px; ">One new feature that we also added is the new class <em>OneToOneStrictEncoder</em>. This is a special <em>OneToOneEncoder</em> that guarantee strict ordering of encoding/writing. This is needed if you have some kind of "stream-oriented" encoder and want to write from different threads. One user of this new class is the <em>ZlibEncoder</em>, as before it was possible to get a corrupted "stream" if you wrote bytes from many different threads.  See <span class="wikiexternallink"><a href="https://github.com/netty/netty/issues/546">#546</a></span> for the full description of the problem.</p>
  <p>One last thing to highlight is the possibility to tune the Selector.select(timeout) call.  You can adjust the timeout via the System Property <em>org.jboss.netty.selectTimeout </em>. The value is in milli-seconds, default is 10ms. Please keep in mind that setting it to a higher value may delay event notifications, but also can help to keep cpu-usage lower.</p>
  <p style="font-family: Ubuntu, 'Liberation Sans', 'Droid Sans', Helvetica, sans-serif; font-size: 14px; font-style: normal; line-height: 19px; ">For the rest of the fixes please checkout our <span class="wikiexternallink"><a style="font-size: 14px; " href="https://github.com/netty/netty/issues?milestone=25&amp;state=closed">issue tracker</a></span>. </p>
  <p style="font-family: Ubuntu, 'Liberation Sans', 'Droid Sans', Helvetica, sans-serif; font-size: 14px; font-style: normal; line-height: 19px; ">The JAR file can be found on <span class="wikiexternallink"><a style="font-size: 14px; " href="http://search.maven.org/#artifactdetails%7Cio.netty%7Cnetty%7C3.5.6.Final%7Cjar">Maven Central</a></span> as usually. Beside this you can also get the full tarball from <span class="wikiexternallink"><a style="font-size: 14px; " href="https://netty.io/Main/Downloads">the download page</a></span>.</p>
  <p style="font-family: Ubuntu, 'Liberation Sans', 'Droid Sans', Helvetica, sans-serif; font-size: 14px; font-style: normal; line-height: 19px; ">Please let us know if you have any problems or questions.</p>
  <p style="font-family: Ubuntu, 'Liberation Sans', 'Droid Sans', Helvetica, sans-serif; font-size: 14px; font-style: normal; line-height: 19px; ">Enjoy coding!</p>
  </div>
